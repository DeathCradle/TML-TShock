<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="12.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProjectGuid>{2DD61F38-F9E9-44E1-A811-92BD799F33E5}</ProjectGuid>
    <OutputType>Exe</OutputType>
    <RootNamespace>OTAPI.Patcher</RootNamespace>
    <AssemblyName>OTAPI.Patcher</AssemblyName>
    <TargetFrameworkVersion>v4.5.2</TargetFrameworkVersion>
    <StartupObject>OTAPI.Patcher.Program</StartupObject>
    <TargetFrameworkProfile />
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug</OutputPath>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Debug\OTAPI.Patcher.xml</DocumentationFile>
    <ExternalConsole>true</ExternalConsole>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugSymbols>false</DebugSymbols>
    <DebugType>none</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Release</OutputPath>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Debug\OTAPI.Patcher.xml</DocumentationFile>
    <ExternalConsole>true</ExternalConsole>
    <ConsolePause>false</ConsolePause>
  </PropertyGroup>
  <!--<Choose>
    <When Condition=" '$(SolutionName)' == 'OTAPI.Client.Xna' ">-->
  <!--<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Any CPU' ">
        <StartArguments>-in=../../../wrap/Terraria/Terraria.exe -mod=../../../OTAPI.Modifications/OTAPI.**/bin/Debug/OTAPI.**.dll -o=../../../OTAPI.dll</StartArguments>
      </PropertyGroup>
      <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Any CPU' ">
        <StartArguments>-in=../../../wrap/Terraria/Terraria.exe -mod=../../../OTAPI.Modifications/OTAPI.**/bin/Release/OTAPI.**.dll -o=../../../OTAPI.dll</StartArguments>
      </PropertyGroup>-->
  <PropertyGroup Condition=" '$(SolutionName)' == 'OTAPI.Client.Xna' And '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DefineConstants>DEBUG;SLN_CLIENT</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(SolutionName)' == 'OTAPI.Client.Xna' And '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DefineConstants>DEBUG;SLN_CLIENT</DefineConstants>
  </PropertyGroup>
  <!--</When>
    <Otherwise>-->
  <!--<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Any CPU' ">
        <StartArguments>-in=../../../wrap/TerrariaServer/TerrariaServer.exe -mod=../../../OTAPI.Modifications/OTAPI.**/bin/Debug/OTAPI.**.dll -o=../../../OTAPI.dll</StartArguments>
      </PropertyGroup>
      <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Any CPU' ">
        <StartArguments>-in=../../../wrap/TerrariaServer/TerrariaServer.exe -mod=../../../OTAPI.Modifications/OTAPI.**/bin/Release/OTAPI.**.dll -o=../../../OTAPI.dll</StartArguments>
      </PropertyGroup>-->
  <PropertyGroup Condition=" '$(SolutionName)' != 'OTAPI.Client.Xna' And '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DefineConstants>DEBUG;SLN_SERVER</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(SolutionName)' != 'OTAPI.Client.Xna' And '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DefineConstants>RELEASE;SLN_SERVER</DefineConstants>
  </PropertyGroup>
  <!--</Otherwise>
  </Choose>-->
  <ItemGroup>
    <Reference Include="ILRepack, Version=2.0.15.0, Culture=neutral, PublicKeyToken=c3e9373f1c31208e, processorArchitecture=MSIL">
      <HintPath>..\packages\ILRepack.Lib.2.0.15\lib\net40\ILRepack.dll</HintPath>
    </Reference>
    <Reference Include="NDesk.Options, Version=0.2.1.0, Culture=neutral, PublicKeyToken=null">
      <HintPath>..\packages\NDesk.Options.0.2.1\lib\NDesk.Options.dll</HintPath>
    </Reference>
  </ItemGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
  </ItemGroup>
  <ItemGroup>
    <Compile Include="Properties\AssemblyInfo.cs" />
    <Compile Include="Program.cs" />
  </ItemGroup>
  <ItemGroup>
    <Content Include="packages.config" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="..\OTAPI.Patcher.Engine\OTAPI.Patcher.Engine.csproj">
      <Project>{A1F792B2-5D80-4DE4-B5DB-7A05DBEABD60}</Project>
      <Name>OTAPI.Patcher.Engine</Name>
    </ProjectReference>
  </ItemGroup>
  <ItemGroup>
    <None Include="app.config" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <!-- <PropertyGroup>
    <PreBuildEvent>::Move up to the root
SET OTAPI_ROOT_DIR=$(SolutionDir)
ECHO [OTAPI] Pre build cleanup to ensure configuration items are cleaned up
ECHO [OTAPI] Base directory %25OTAPI_ROOT_DIR%25

cd %25OTAPI_ROOT_DIR%25OTAPI.Modifications
for /D %25%25s in (*) DO (
echo [OTAPI] Removing %25OTAPI_ROOT_DIR%25OTAPI.Modifications\%25%25s\bin
rmdir /s /q %25OTAPI_ROOT_DIR%25OTAPI.Modifications\%25%25s\bin
)
</PreBuildEvent>
  </PropertyGroup> -->
  <!-- To modify your build process, add your task inside one of the targets below and uncomment it. 
       Other similar extension points exist, see Microsoft.Common.targets.
  <Target Name="BeforeBuild">
  </Target>
  <Target Name="AfterBuild">
  </Target>
  -->
</Project>